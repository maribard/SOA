//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMovieClient2.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyMovieYDTO")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Review", Namespace="http://schemas.datacontract.org/2004/07/MyMovieYDTO")]
    [System.SerializableAttribute()]
    public partial class Review : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyMovieClient2.ServiceReference2.Person AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyMovieClient2.ServiceReference2.Person Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetById", ReplyAction="http://tempuri.org/IService2/GetByIdResponse")]
        MyMovieClient2.ServiceReference2.Person GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetById", ReplyAction="http://tempuri.org/IService2/GetByIdResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetByName", ReplyAction="http://tempuri.org/IService2/GetByNameResponse")]
        MyMovieClient2.ServiceReference2.Person GetByName(string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetByName", ReplyAction="http://tempuri.org/IService2/GetByNameResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person> GetByNameAsync(string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetAll", ReplyAction="http://tempuri.org/IService2/GetAllResponse")]
        MyMovieClient2.ServiceReference2.Person[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetAll", ReplyAction="http://tempuri.org/IService2/GetAllResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Create", ReplyAction="http://tempuri.org/IService2/CreateResponse")]
        int Create(MyMovieClient2.ServiceReference2.Person Person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Create", ReplyAction="http://tempuri.org/IService2/CreateResponse")]
        System.Threading.Tasks.Task<int> CreateAsync(MyMovieClient2.ServiceReference2.Person Person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Update", ReplyAction="http://tempuri.org/IService2/UpdateResponse")]
        void Update(MyMovieClient2.ServiceReference2.Person Person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Update", ReplyAction="http://tempuri.org/IService2/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(MyMovieClient2.ServiceReference2.Person Person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Delete", ReplyAction="http://tempuri.org/IService2/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/Delete", ReplyAction="http://tempuri.org/IService2/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewById", ReplyAction="http://tempuri.org/IService2/GetReviewByIdResponse")]
        MyMovieClient2.ServiceReference2.Review GetReviewById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewById", ReplyAction="http://tempuri.org/IService2/GetReviewByIdResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review> GetReviewByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetAllReviews", ReplyAction="http://tempuri.org/IService2/GetAllReviewsResponse")]
        MyMovieClient2.ServiceReference2.Review[] GetAllReviews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetAllReviews", ReplyAction="http://tempuri.org/IService2/GetAllReviewsResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetAllReviewsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewsByAuthor", ReplyAction="http://tempuri.org/IService2/GetReviewsByAuthorResponse")]
        MyMovieClient2.ServiceReference2.Review[] GetReviewsByAuthor(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewsByAuthor", ReplyAction="http://tempuri.org/IService2/GetReviewsByAuthorResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetReviewsByAuthorAsync(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewsByMovie", ReplyAction="http://tempuri.org/IService2/GetReviewsByMovieResponse")]
        MyMovieClient2.ServiceReference2.Review[] GetReviewsByMovie(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetReviewsByMovie", ReplyAction="http://tempuri.org/IService2/GetReviewsByMovieResponse")]
        System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetReviewsByMovieAsync(int movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/CreateReview", ReplyAction="http://tempuri.org/IService2/CreateReviewResponse")]
        int CreateReview(MyMovieClient2.ServiceReference2.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/CreateReview", ReplyAction="http://tempuri.org/IService2/CreateReviewResponse")]
        System.Threading.Tasks.Task<int> CreateReviewAsync(MyMovieClient2.ServiceReference2.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/UpdateReview", ReplyAction="http://tempuri.org/IService2/UpdateReviewResponse")]
        void UpdateReview(MyMovieClient2.ServiceReference2.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/UpdateReview", ReplyAction="http://tempuri.org/IService2/UpdateReviewResponse")]
        System.Threading.Tasks.Task UpdateReviewAsync(MyMovieClient2.ServiceReference2.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteReview", ReplyAction="http://tempuri.org/IService2/DeleteReviewResponse")]
        void DeleteReview(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteReview", ReplyAction="http://tempuri.org/IService2/DeleteReviewResponse")]
        System.Threading.Tasks.Task DeleteReviewAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : MyMovieClient2.ServiceReference2.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<MyMovieClient2.ServiceReference2.IService2>, MyMovieClient2.ServiceReference2.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MyMovieClient2.ServiceReference2.Person GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public MyMovieClient2.ServiceReference2.Person GetByName(string name, string surname) {
            return base.Channel.GetByName(name, surname);
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person> GetByNameAsync(string name, string surname) {
            return base.Channel.GetByNameAsync(name, surname);
        }
        
        public MyMovieClient2.ServiceReference2.Person[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Person[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public int Create(MyMovieClient2.ServiceReference2.Person Person) {
            return base.Channel.Create(Person);
        }
        
        public System.Threading.Tasks.Task<int> CreateAsync(MyMovieClient2.ServiceReference2.Person Person) {
            return base.Channel.CreateAsync(Person);
        }
        
        public void Update(MyMovieClient2.ServiceReference2.Person Person) {
            base.Channel.Update(Person);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(MyMovieClient2.ServiceReference2.Person Person) {
            return base.Channel.UpdateAsync(Person);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public MyMovieClient2.ServiceReference2.Review GetReviewById(int id) {
            return base.Channel.GetReviewById(id);
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review> GetReviewByIdAsync(int id) {
            return base.Channel.GetReviewByIdAsync(id);
        }
        
        public MyMovieClient2.ServiceReference2.Review[] GetAllReviews() {
            return base.Channel.GetAllReviews();
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetAllReviewsAsync() {
            return base.Channel.GetAllReviewsAsync();
        }
        
        public MyMovieClient2.ServiceReference2.Review[] GetReviewsByAuthor(int authorId) {
            return base.Channel.GetReviewsByAuthor(authorId);
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetReviewsByAuthorAsync(int authorId) {
            return base.Channel.GetReviewsByAuthorAsync(authorId);
        }
        
        public MyMovieClient2.ServiceReference2.Review[] GetReviewsByMovie(int movieId) {
            return base.Channel.GetReviewsByMovie(movieId);
        }
        
        public System.Threading.Tasks.Task<MyMovieClient2.ServiceReference2.Review[]> GetReviewsByMovieAsync(int movieId) {
            return base.Channel.GetReviewsByMovieAsync(movieId);
        }
        
        public int CreateReview(MyMovieClient2.ServiceReference2.Review review) {
            return base.Channel.CreateReview(review);
        }
        
        public System.Threading.Tasks.Task<int> CreateReviewAsync(MyMovieClient2.ServiceReference2.Review review) {
            return base.Channel.CreateReviewAsync(review);
        }
        
        public void UpdateReview(MyMovieClient2.ServiceReference2.Review review) {
            base.Channel.UpdateReview(review);
        }
        
        public System.Threading.Tasks.Task UpdateReviewAsync(MyMovieClient2.ServiceReference2.Review review) {
            return base.Channel.UpdateReviewAsync(review);
        }
        
        public void DeleteReview(int id) {
            base.Channel.DeleteReview(id);
        }
        
        public System.Threading.Tasks.Task DeleteReviewAsync(int id) {
            return base.Channel.DeleteReviewAsync(id);
        }
    }
}
